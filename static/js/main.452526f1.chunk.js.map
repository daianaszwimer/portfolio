{"version":3,"sources":["context/Theme.js","locales/index.js","context/Locale.js","components/LanguageToggle.js","components/ThemeToggle.js","components/Link.js","components/Contact.js","components/Tag.js","components/CVItems.js","components/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["backgroundColor","theme","light","dark","textColor","hoverColor","hoverLinkColor","themes","dictionaryList","es","en","languageOptions","LocaleContext","createContext","userLanguage","dictionary","userLanguageChange","console","log","LocaleProvider","children","defaultLanguage","window","localStorage","getItem","useState","setUserLanguage","provider","selected","newLanguage","setItem","Provider","value","Toggle","styled","select","LanguageToggle","useContext","onChange","e","target","Object","entries","map","id","name","key","HiddenCheckbox","input","label","ThemeToggle","props","ThemeContext","className","type","htmlFor","onClick","handleToggle","Link","text","link","title","href","rel","Wrapper","h4","Contact","url","div","Name","Tag","isOpen","setIsOpen","prevIsOpen","closedTag","TagChild","CVItems","experience_title","experience_text_1","experience_text_2","experience_text_3","experience_text_4","experience_text_5","role","aria-label","experience_text_6","experience_text_7","experience_text_8","experience_text_9","experience_text_10","experience_text_11","experience_text_12","education_title","education_text","education_text_1","knowledge_title","knowledge_text","interests_title","interests_text_3","interests_text","interests_text_1","interests_text_4","interests_text_2","Container","Me","ContactWrapper","Picture","img","h1","MainContent","toggleTheme","alt","src","contact_title","resume","Footer","footer","App","setTheme","prevTheme","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.452526f1.chunk.js","sourcesContent":["import theme from \"styled-theming\";\n\nexport const backgroundColor = theme(\"theme\", {\n\tlight: \"#ffe7ec\",\n\tdark: \"rgb(21, 32, 43)\",\n});\n\nexport const textColor = theme(\"theme\", {\n\tlight: \"#000\",\n\tdark: \"#fff\",\n});\n\nexport const hoverColor = theme(\"theme\", {\n\tlight: \"#cc0052\",\n\tdark: \"#FF838E\",\n})\n\nexport const hoverLinkColor = theme(\"theme\", {\n\tlight: \"#9000bd\",\n\tdark: \"#c83eff\",\n})\n\nexport const themes = { light: 'light', dark: 'dark'}\n","import es from './es.json';\nimport en from './en.json';\n\nexport const dictionaryList = { es, en };\n\nexport const languageOptions = {\n    en: 'English',\n    es: 'EspaÃ±ol'\n};\n","import React, { useState, createContext } from 'react';\n\nimport { languageOptions, dictionaryList } from '../locales';\n\n// create the language context with default selected language\nexport const LocaleContext = createContext({\n    userLanguage: 'en',\n    dictionary: dictionaryList.en,\n    userLanguageChange: () => {console.log(\"tenes q implementarlo aca\")}\n});\n\nconst LANG_ITEM_NAME = \"dsp-lang\"\n\n// it provides the language context to app\nexport function LocaleProvider({ children }) {\n    const defaultLanguage = window.localStorage.getItem(LANG_ITEM_NAME);\n    const [userLanguage, setUserLanguage] = useState(defaultLanguage || 'en');\n    console.log(dictionaryList[userLanguage], \"diccionario-------\");\n    const provider = {\n        userLanguage,\n        dictionary: dictionaryList[userLanguage],\n        userLanguageChange: selected => {\n            const newLanguage = languageOptions[selected] ? selected : 'en'\n            setUserLanguage(newLanguage);\n            window.localStorage.setItem(LANG_ITEM_NAME, newLanguage);\n        }\n    };\n\n    return (\n        <LocaleContext.Provider value={provider}>\n            {children}\n        </LocaleContext.Provider>\n    );\n};\n\n","import React, { useContext } from 'react';\n\nimport { languageOptions } from '../locales';\nimport { LocaleContext } from '../context/Locale';\nimport styled from \"styled-components\";\nimport {backgroundColor, textColor} from \"../context/Theme\";\n\nconst Toggle = styled.select`\n\tposition: absolute;\n\tright: 125px;\n\ttop: 20px;\n\tfont-family: 'Ubuntu',sans-serif;\n\tpadding: 8px;\n\tbackground-color: ${backgroundColor};\n\tcolor: ${textColor};\n\tfilter: hue-rotate(45deg);\n`\nexport default function LanguageToggle() {\n\tconst { userLanguage, userLanguageChange } = useContext(LocaleContext);\n\n\t// set selected language by calling context method\n\tconst handleLanguageChange = e => userLanguageChange(e.target.value);\n\n\treturn (\n\t\t<Toggle\n\t\t\tonChange={handleLanguageChange}\n\t\t\tvalue={userLanguage}\n\t\t>\n\t\t\t{Object.entries(languageOptions).map(([id, name]) => (\n\t\t\t\t<option key={id} value={id}>{name}</option>\n\t\t\t))}\n\t\t</Toggle>\n\t);\n};\n\n","import React, { useContext } from 'react';\nimport styled, { ThemeContext } from \"styled-components\";\n\nconst HiddenCheckbox = styled.input`\n  visibility: hidden;\n  height: 0;\n  width: 0;\n`;\nconst Toggle = styled.label`\n  cursor: pointer;\n  text-indent: -9999px;\n\twidth: 75px;\n\theight: 35px;\n  background: #242B50;\n  display: block;\n  border-radius: 100px;\n  position: relative;\n`;\n\nconst ThemeToggle = (props) => {\n\tconst { theme } = useContext(ThemeContext)\n\treturn (\n\t\t<div className=\"toggle\">\n\t\t\t<HiddenCheckbox type=\"checkbox\" id=\"switch\"/>\n\t\t\t<Toggle htmlFor=\"switch\" className={`toggle-${theme}`} onClick={props.handleToggle}>Toggle</Toggle>\n\t\t</div>\n\t)\n}\n\nexport default ThemeToggle;","import React, {useContext} from \"react\";\nimport {ThemeContext} from \"styled-components\";\n\nconst Link = ({text, link, title}) => {\n  const {theme} = useContext(ThemeContext)\n  return (\n    <a className={`link-${theme}`} href={link} target='_blank' rel=\"noopener noreferrer\" title={title ? title : text}>{text}</a>\n  )\n}\n\nexport default Link","import React  from 'react';\nimport styled  from \"styled-components\";\nimport Link from \"./Link\";\n\nconst Wrapper = styled.h4`\n\tdisplay: block;\n`;\n\nconst Contact = (props) => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t{props.name}: <Link link={props.url} title={props.name} text={props.text} />\n\t\t</Wrapper>\n\t)\n}\n\nexport default Contact;\n","import React, { useState } from 'react';\nimport styled  from \"styled-components\";\nimport { hoverColor } from \"../context/Theme\"\n\nconst Wrapper = styled.div`\n\twidth: 100%;\n`;\n\nconst Name = styled.h4`\n\tdisplay: inline-block;\n\tcursor: pointer;\n\t&:hover {\n\t\tcolor: ${hoverColor};\n\t}\n`\n\nconst Tag = (props) => {\n\tconst [ isOpen, setIsOpen ] = useState(true)\n\n\tconst handleClick = () => {\n\t\tsetIsOpen(prevIsOpen => !prevIsOpen)\n\t}\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Name onClick={handleClick}>{`<${props.name}${!!props.closedTag ? '/' : ''}>`}</Name>\n\t\t\t{isOpen &&\n\t\t\t\t<div>\n\t\t\t\t\t{props.children}\n\t\t\t\t</div>\n\t\t\t}\n\t\t</Wrapper>\n\t)\n}\n\nexport default Tag;\n","import Tag from \"./Tag\";\nimport React, {useContext} from \"react\";\nimport styled from \"styled-components\";\nimport {LocaleContext} from \"../context/Locale\";\nimport Link from \"./Link\";\n\nconst TagChild = styled.div`\n\tmargin-left: 30px;\n\tanimation: fadein 0.5s;\n  p {\n    margin: 0;\n  }\n`\nconst Wrapper = styled.div`\n\tmargin-left: 15px;\n`;\nconst CVItems = () => {\n  const {dictionary} = useContext(LocaleContext)\n  return (\n    <Wrapper>\n      <Tag\n        name={dictionary.experience_title}\n        closedTag\n      >\n        <TagChild>\n          <p>{dictionary.experience_text_1}<Link link=\"https://wearepsh.com\" text='PSh'/>{dictionary.experience_text_2}</p>\n          <p>{dictionary.experience_text_3}</p>\n          <p>{dictionary.experience_text_4} <Link link=\"https://nearpod.com/\" text='Nearpod' target='_blank' rel=\"noopener noreferrer\"/>. {dictionary.experience_text_5}<span role='img' aria-label='red heart'>â¤ï¸</span> {dictionary.experience_text_6}</p>\n          <p>{dictionary.experience_text_7}</p>\n          <p>{dictionary.experience_text_8}<Link link=\"https://distillery.com/\" text='Distillery'/>\n            {dictionary.experience_text_9}</p>\n          <p>{dictionary.experience_text_10}<Link link=\"https://standardnotes.com/\" text='Standard Notes'/>\n            {dictionary.experience_text_11}</p>\n          <p>{dictionary.experience_text_12}</p>\n        </TagChild>\n      </Tag>\n      <Tag\n        name={dictionary.education_title}\n        closedTag\n      >\n        <TagChild>\n          <p>{dictionary.education_text}</p>\n          <p>{dictionary.education_text_1}</p>\n        </TagChild>\n      </Tag>\n      <Tag\n        name={dictionary.knowledge_title}\n        closedTag\n      >\n        <TagChild>\n          <p>\n            {dictionary.knowledge_text}\n          </p>\n        </TagChild>\n      </Tag>\n      <Tag\n        name={dictionary.interests_title}\n        closedTag\n      >\n        <TagChild>\n          <ul>\n            <li>\n              {dictionary.interests_text_3}\n            </li>\n            <li>\n              {dictionary.interests_text} <Link text=\"Youtube Tech Talks\" link=\"https://www.youtube.com/playlist?list=PLnaeZnXQ8nsmWRIVeKIeaPOac0gcONCqP\"/>. {dictionary.interests_text_1}\n            </li>\n            <li>\n              {dictionary.interests_text_4} <Link text=\"Codigo Facilito React Workshop\" link=\"https://codigofacilito.com/cursos/taller-primera-app-react\" />\n            </li>\n            <li>\n              {dictionary.interests_text_2}\n            </li>\n          </ul>\n        </TagChild>\n      </Tag>\n    </Wrapper>\n  )\n}\n\nexport default CVItems;","import LanguageToggle from \"./LanguageToggle\";\nimport ThemeToggle from \"./ThemeToggle\";\nimport Contact from \"./Contact\";\nimport React, {useContext} from \"react\";\nimport styled from \"styled-components\";\nimport {backgroundColor, hoverLinkColor, textColor} from \"../context/Theme\";\nimport {LocaleContext} from \"../context/Locale\";\nimport CVItems from \"./CVItems\"\n\nconst Container = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  justify-content: center;\n  background-color: ${backgroundColor};\n  color: ${textColor};\n  min-height: calc(100vh - 30px);\n  @media (max-width: 750px) {\n    flex-wrap: wrap;\n  }\n  a:hover {\n    color: ${hoverLinkColor};\n  }\n`;\n\nconst Me = styled.div`\n\tflex: 1 0 auto;\n\tmax-width: 32%;\n\ttext-align: center;\n\tfont-family: 'Ubuntu', sans-serif;\n\t@media (max-width: 750px) {\n\t\tmax-width: 100%;\n\t}\n`\nconst ContactWrapper = styled.div`\n\tpadding: 0 15px;\n\ttext-align: left;\n\tanimation: slideInFromLeft 3s;\n`\nconst Picture = styled.img`\n\tmax-width: 65%;\n\tborder-radius: 50%;\n\theight: auto;\n\tanimation: slideInFromLeft 2s;\n`\nconst Name = styled.h1`\n\tanimation: slideInFromLeft 1s;\n`\nconst MainContent = ({toggleTheme}) => {\n  const { dictionary } = useContext(LocaleContext);\n\n  return (\n    <Container>\n      <LanguageToggle/>\n      <ThemeToggle handleToggle={toggleTheme}/>\n      <Me>\n        <Name>{dictionary.name}</Name>\n        <Picture\n          alt=\"Daiana's Picture\"\n          src='https://avatars3.githubusercontent.com/u/32345857?s=460&u=2e218a8e8b7dca8deecd219439feec069206784c&v=4'\n        />\n        <ContactWrapper>\n          <h3>{dictionary.contact_title}:</h3>\n          <Contact name='LinkedIn' url='https://www.linkedin.com/in/daiana-szwimer/' text='https://www.linkedin.com/in/daiana-szwimer/'/>\n          <Contact name='Mail' url='mailto:daiu.szwimer@gmail.com' text='daiu.szwimer@gmail.com'/>\n        </ContactWrapper>\n      </Me>\n      <div className='tag tag-wrapper'>\n        <h4>{`<${dictionary.resume}>`}</h4>\n        <CVItems/>\n        <h4>{`</${dictionary.resume}>`}</h4>\n      </div>\n    </Container>\n  )\n}\n\nexport default MainContent","import React, {useState} from 'react'\nimport './App.css';\nimport { themes, backgroundColor, textColor, hoverLinkColor } from './context/Theme'\nimport styled, { ThemeProvider } from \"styled-components\";\nimport {LocaleProvider} from \"./context/Locale\";\nimport MainContent from \"./components/MainContent\";\nimport Link from \"./components/Link\";\n\nconst Footer = styled.footer`\n\tbackground-color: ${backgroundColor};\n\tcolor: ${textColor};\n\tposition: relative;\n\tbottom: 0;\n\twidth: 100%;\n\theight: 30px;\n\ttext-align: center;\n\tfont-family: 'Ubuntu', sans-serif;\n\ta:hover {\n\t\tcolor: ${hoverLinkColor};\n\t}\n`\nfunction App() {\n\tconst [theme, setTheme] = useState(themes.light)\n\tconst toggleTheme = () => {\n\t\tsetTheme(prevTheme => prevTheme === themes.light ? themes.dark : themes.light)\n\t}\n\n\treturn (\n\t\t<ThemeProvider theme={{theme}}>\n\t\t<LocaleProvider>\n\t\t\t<MainContent toggleTheme={toggleTheme}/>\n\t\t\t<Footer>\n\t\t\t\tIcons made by <Link link=\"https://www.flaticon.com/authors/smashicons\" text=\"Smashicons\" /> from <Link link=\"https://www.flaticon.com/\" text=\"Flaticon\"/>\n\t\t\t</Footer>\n\t\t</LocaleProvider>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}